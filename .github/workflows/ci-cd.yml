name: 🚀 Yeşer EAS-Native CI/CD Pipeline

on:
  push:
    branches: [main, develop, feature/premium-payment-integration]
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # Allow manual triggering
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production
      deploy_to_stores:
        description: 'Deploy to app stores after build'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'
  CACHE_VERSION: 'v6'

jobs:
  # 🔍 Basic Code Quality (Let EAS handle deep validation)
  quality-check:
    name: 🎯 Code Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📦 Install Dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm ci --prefer-offline --no-audit
        env:
          CI: true

      - name: 🎯 TypeScript Check
        run: |
          echo "Running TypeScript compilation check..."
          npm run type-check

      - name: 🔧 ESLint Check
        run: |
          echo "Running ESLint analysis..."
          npm run lint:check

      - name: 🏆 Quality Summary
        run: |
          echo "✅ Basic quality checks passed!"
          echo "🚀 EAS Build will handle comprehensive validation"

  # 🚀 EAS Build Pipeline - Preview
  build-preview:
    name: 📱 EAS Build Preview
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/develop' || contains(github.ref, 'feature/') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'preview')
    timeout-minutes: 60
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 🔨 EAS Build Preview
        run: |
          echo "🚀 Starting EAS Build for preview..."
          echo "📱 EAS will handle all validation, dependencies, and building"
          eas build --platform all --profile preview --non-interactive

      - name: 📱 Build Success
        run: |
          echo "🎉 EAS Preview build completed!"
          echo "📱 Builds available on EAS dashboard for testing"

  # 🌟 EAS Build Pipeline - Production
  build-production:
    name: 🚀 EAS Build Production
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    timeout-minutes: 90
    
    outputs:
      should-deploy: ${{ steps.check-deploy.outputs.should-deploy }}
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 🔨 EAS Build Production
        run: |
          echo "🚀 Starting EAS Build for production..."
          echo "📦 Building for App Store submission"
          echo "🍏 EAS will handle all validation, credentials, and building"
          eas build --platform all --profile production --non-interactive

      - name: 🎯 Check Deploy Conditions
        id: check-deploy
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"[deploy]"* ]] || [[ "${{ github.event.inputs.deploy_to_stores }}" == "true" ]]; then
            echo "should-deploy=true" >> $GITHUB_OUTPUT
            echo "🚢 Deployment conditions met - will proceed to app store submission"
          else
            echo "should-deploy=false" >> $GITHUB_OUTPUT
            echo "📦 Build completed - no deployment trigger found"
          fi

      - name: 🏆 Production Build Success
        run: |
          echo "🚀 EAS Production build completed successfully!"
          echo "📦 Ready for app store submission"

  # 🚢 EAS Submit Pipeline
  deploy-production:
    name: 🚢 EAS Submit to App Stores
    runs-on: ubuntu-latest
    needs: build-production
    if: needs.build-production.outputs.should-deploy == 'true'
    timeout-minutes: 30

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 🚀 EAS Submit to App Stores
        run: |
          echo "🚢 Starting EAS Submit to app stores..."
          echo "🍎 iOS: Submitting to App Store Connect"
          echo "🤖 Android: Submitting to Google Play Console"
          eas submit --platform all --profile production --non-interactive

      - name: 🎯 Deployment Success
        run: |
          echo "🎉 EAS Submit completed!"
          echo "📱 App submitted to both app stores via EAS!"
          echo "⏱️  Review times: iOS (24-48 hours), Android (2-3 hours)"

  # 🔍 Security Scan (Keep minimal)
  security-scan:
    name: 🛡️ Security Check
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🛡️ Security Audit
        run: |
          echo "Running security audit..."
          npm run audit:security

  # 🎯 Workflow Summary
  workflow-completion:
    name: 🎯 Pipeline Summary
    runs-on: ubuntu-latest
    needs: [quality-check, build-preview, build-production, security-scan, deploy-production]
    if: always()
    
    steps:
      - name: 📊 Workflow Summary
        run: |
          echo "🎯 EAS-Native CI/CD Pipeline Summary"
          echo "===================================="
          echo "Quality Check: ${{ needs.quality-check.result }}"
          echo "Preview Build: ${{ needs.build-preview.result }}"
          echo "Production Build: ${{ needs.build-production.result }}"
          echo "Security Scan: ${{ needs.security-scan.result }}"
          echo "Deployment: ${{ needs.deploy-production.result }}"
          echo "===================================="
          
          if [[ "${{ needs.deploy-production.result }}" == "success" ]]; then
            echo "🚀 DEPLOYMENT SUCCESSFUL! App submitted via EAS."
          elif [[ "${{ needs.build-production.result }}" == "success" ]]; then
            echo "📦 BUILD SUCCESSFUL! Ready for EAS Submit."
          else
            echo "🔄 Pipeline completed. EAS handles all deep validation."
          fi

      - name: 🚀 EAS-Native Success
        run: |
          echo "✅ Fully EAS-Native CI/CD Pipeline!" 
          echo "🎯 All validation, building, and deployment handled by EAS"
          echo "📱 No custom scripts needed - EAS is the complete solution" 